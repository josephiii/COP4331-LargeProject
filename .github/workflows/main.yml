name: Deploy MERN App to Digital Ocean

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install and build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build
    
    - name: Deploy to Digital Ocean Droplet
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      run: |
        sshpass -p "${SSH_KEY}" ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} << 'EOF'
        cd /var/opt/backend
        git pull origin main
        npm install
        pm2 restart backend
        EOF
        
        sshpass -p "${SSH_KEY}" scp -o StrictHostKeyChecking=no -r frontend/dist/* ${SSH_USERNAME}@${SSH_HOST}:/var/www/html/
        
        sshpass -p "${SSH_KEY}" ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} << 'EOF'
        systemctl restart nginx
        EOF
